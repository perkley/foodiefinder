AWSTemplateFormatVersion: '2010-09-09'
Description: Create a Cognito User Pool and store the Client ID, Client Secret, and User Pool ID in AWS Secrets Manager

Parameters:
  CognitoUserPoolName:
    Description: The name of the project to use for cognito pool name.
    Type: String
    Default: foodiefinder

  CognitoDomainName:
    Description: The name of the project to use for cognito domain name.
    Type: String
    Default: foodiefinder

Resources:
  # https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-userpool.html
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Ref CognitoUserPoolName
      UsernameAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
      MfaConfiguration: "OFF"
      AutoVerifiedAttributes:
        - email
      #SmsVerificationMessage: !Sub "A verification code has been sent to your phone number ${phoneNumber}."
      #EmailVerificationMessage: !Sub "A verification code has been sent to your email address ${email}."
      EmailVerificationSubject: !Sub "${CognitoUserPoolName} Account Verification"
      #SmsVerificationSubject: !Sub "${CognitoUserPoolName} Phone Verification"
      #UserPoolAddOns:
      #  - ProviderName: UserVerification
      #    VerificationSubject: !Sub "${CognitoUserPoolName} Account Verification"
      Schema:
        - Name: email
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: family_name
          AttributeDataType: String
          Required: true
          Mutable: true
        - Name: given_name
          AttributeDataType: String
          Required: true
          Mutable: true

  CognitoUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      UserPoolId: !Ref CognitoUserPool
      Domain: !Ref CognitoDomainName

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref CognitoUserPool
      ClientName: !Sub "${CognitoUserPoolName}App"
      GenerateSecret: true
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs:
        - http://localhost:8000/callback
        #- !Sub "https://${DomainName}/callback"
      LogoutURLs:
        - http://localhost:8000
        #- !Sub "https://${DomainName}"
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - openid
        - email
        - profile
      AllowedOAuthFlowsUserPoolClient: true

  StoreSecretsInSecretsManager:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub "${CognitoUserPoolName}AppSecrets"
      Description: "Secrets for Cognito User Pool Application"
      SecretString: 
        Fn::Sub: |
          {
            "AllowedHosts": "'your-domain-here','localhost'",
            "UserPoolId": "${CognitoUserPool}",
            "ClientId": "${CognitoUserPoolClient}",
            "ClientSecret": "${CognitoUserPoolClient.ClientSecret}",
            "Region": "${AWS::Region}",
            "CognitoUrl": "https://${CognitoDomainName}.auth.${AWS::Region}.amazoncognito.com",
            "CognitoLoginRedirectUrl": "http://localhost:8000/callback",
            "CognitoLogoutRedirectUrl": "http://localhost:8000/"
          }

Outputs:
  CognitoUserPoolName:
    Description: The name of the project to use for cognito domain name
    Value: !Ref CognitoUserPoolName

  CognitoDomainName:
    Description: The name of the project to use for cognito domain name
    Value: !Ref CognitoDomainName

  UserPoolId:
    Description: The ID of the created User Pool
    Value: !Ref CognitoUserPool

  UserPoolClientId:
    Description: The ID of the created User Pool Client
    Value: !Ref CognitoUserPoolClient

  SecretArn:
    Description: The ARN of the secret stored in Secrets Manager
    Value: !Ref StoreSecretsInSecretsManager

  UserPoolArn:
    Value: !GetAtt CognitoUserPool.Arn

  UserPoolDomain:
    Value: !Sub https://${CognitoDomainName}.auth.${AWS::Region}.amazoncognito.com
